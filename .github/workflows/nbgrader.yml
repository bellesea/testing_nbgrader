name: Auto-Grade Assignments

on:
  pull_request:

permissions:
  pull-requests: write

jobs:
  grade:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3

      - name: 🏗 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: 📦 Install dependencies
        run: |
          pip install -r requirements.txt

      - name: 🔄 Change into course_id and run nbgrader
        run: |
          cd course_id
          nbgrader autograde "ps3" --force

      - name: 📊 Extract Grade & Errors
        run: |
          cd course_id
          nbgrader export --to=grades.json --assignment="ps3"
          jq '.' grades.json > grades_pretty.json  # Pretty-print for debugging
          echo "## Scores" > grade_report.md
          jq -r '.students[0].score as $score | "**Total Score:** \($score)"' grades.json >> grade_report.md
          echo "" >> grade_report.md
          echo "## Errors" >> grade_report.md
          jq -r '.students[0].notebooks[].cells[] | select(.success == false) | "- **Cell \(.cell_id):** \(.error_message)"' grades.json >> grade_report.md

      - name: 📝 Comment PR with Grade & Errors
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            ✅ **Grading Complete!**
            - Your assignment **ps3** has been graded.
            - **Total Score:** $(jq -r '.students[0].score' course_id/grades.json)
            
            ## ❌ Errors:
            $(jq -r '.students[0].notebooks[].cells[] | select(.success == false) | "- **Cell \(.cell_id):** \(.error_message)"' course_id/grades.json)

          mode: upsert
          create_if_not_exists: true